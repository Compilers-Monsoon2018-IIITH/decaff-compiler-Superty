Grammar

    0 $accept: program $end

    1 program: CLASS ID OPEN_BRACE body CLOSE_BRACE

    2 body: method_decl_list
    3     | value_type nonempty_field_list body

    4 method_decl_list: %empty
    5                 | method_decl method_decl_list

    6 field: ID
    7      | ID OPEN_BRACKET INT_LITERAL CLOSE_BRACKET

    8 nonempty_field_list: field SEMICOLON
    9                    | field COMMA nonempty_field_list

   10 method_decl: VOID_TYPE ID OPEN_PAREN formal_parameter_list CLOSE_PAREN block
   11            | value_type ID OPEN_PAREN formal_parameter_list CLOSE_PAREN block

   12 formal_parameter_list: %empty
   13                      | nonempty_formal_parameter_list

   14 nonempty_formal_parameter_list: value_type ID
   15                               | value_type ID COMMA nonempty_formal_parameter_list

   16 block: OPEN_BRACE var_decl_list statement_list CLOSE_BRACE

   17 statement_list: %empty
   18               | statement statement_list

   19 var_decl_list: %empty
   20              | var_decl_list value_type nonempty_id_list SEMICOLON

   21 nonempty_id_list: ID
   22                 | ID COMMA nonempty_id_list

   23 value_type: INT_TYPE
   24           | BOOLEAN_TYPE

   25 statement: location assign_op expr SEMICOLON
   26          | method_call SEMICOLON
   27          | IF OPEN_PAREN expr CLOSE_PAREN block
   28          | IF OPEN_PAREN expr CLOSE_PAREN block ELSE block
   29          | FOR ID ASSIGN expr COMMA expr block
   30          | RETURN SEMICOLON
   31          | RETURN expr SEMICOLON
   32          | BREAK SEMICOLON
   33          | CONTINUE SEMICOLON
   34          | block

   35 assign_op: ASSIGN
   36          | PLUS_ASSIGN
   37          | MINUS_ASSIGN

   38 expr: location
   39     | method_call
   40     | INT_LITERAL
   41     | CHAR_LITERAL
   42     | BOOL_LITERAL
   43     | expr OR expr
   44     | expr AND expr
   45     | expr EQ expr
   46     | expr NE expr
   47     | expr LT expr
   48     | expr LE expr
   49     | expr GE expr
   50     | expr GT expr
   51     | expr PLUS expr
   52     | expr MINUS expr
   53     | expr MULT expr
   54     | expr DIV expr
   55     | expr MOD expr
   56     | NOT expr
   57     | MINUS expr
   58     | OPEN_PAREN expr CLOSE_PAREN

   59 location: ID
   60         | ID OPEN_BRACKET expr CLOSE_BRACKET

   61 method_call: ID OPEN_PAREN expr_list CLOSE_PAREN
   62            | CALLOUT OPEN_PAREN STRING_LITERAL callout_arg_list CLOSE_PAREN

   63 expr_list: %empty
   64          | nonempty_expr_list

   65 nonempty_expr_list: expr
   66                   | expr COMMA nonempty_expr_list

   67 callout_arg_list: %empty
   68                 | COMMA nonempty_callout_arg_list

   69 nonempty_callout_arg_list: callout_arg
   70                          | callout_arg COMMA nonempty_callout_arg_list

   71 callout_arg: expr
   72            | STRING_LITERAL


Terminals, with rules where they appear

$end (0) 0
error (256)
ID (258) 1 6 7 10 11 14 15 21 22 29 59 60 61
INT_LITERAL (259) 7 40
STRING_LITERAL (260) 62 72
BOOL_LITERAL (261) 42
CHAR_LITERAL (262) 41
CALLOUT (263) 62
COMMA (264) 9 15 22 29 66 68 70
SEMICOLON (265) 8 20 25 26 30 31 32 33
OPEN_PAREN (266) 10 11 27 28 58 61 62
CLOSE_PAREN (267) 10 11 27 28 58 61 62
OPEN_BRACKET (268) 7 60
CLOSE_BRACKET (269) 7 60
OPEN_BRACE (270) 1 16
CLOSE_BRACE (271) 1 16
ASSIGN (272) 29 35
PLUS_ASSIGN (273) 36
MINUS_ASSIGN (274) 37
IF (275) 27 28
ELSE (276) 28
FOR (277) 29
RETURN (278) 30 31
BREAK (279) 32
CONTINUE (280) 33
INT_TYPE (281) 23
BOOLEAN_TYPE (282) 24
VOID_TYPE (283) 10
CLASS (284) 1
OR (285) 43
AND (286) 44
EQ (287) 45
NE (288) 46
LT (289) 47
LE (290) 48
GE (291) 49
GT (292) 50
PLUS (293) 51
MINUS (294) 52 57
MULT (295) 53
DIV (296) 54
MOD (297) 55
NOT (298) 56


Nonterminals, with rules where they appear

$accept (44)
    on left: 0
program (45)
    on left: 1, on right: 0
body (46)
    on left: 2 3, on right: 1 3
method_decl_list (47)
    on left: 4 5, on right: 2 5
field (48)
    on left: 6 7, on right: 8 9
nonempty_field_list (49)
    on left: 8 9, on right: 3 9
method_decl (50)
    on left: 10 11, on right: 5
formal_parameter_list (51)
    on left: 12 13, on right: 10 11
nonempty_formal_parameter_list (52)
    on left: 14 15, on right: 13 15
block (53)
    on left: 16, on right: 10 11 27 28 29 34
statement_list (54)
    on left: 17 18, on right: 16 18
var_decl_list (55)
    on left: 19 20, on right: 16 20
nonempty_id_list (56)
    on left: 21 22, on right: 20 22
value_type (57)
    on left: 23 24, on right: 3 11 14 15 20
statement (58)
    on left: 25 26 27 28 29 30 31 32 33 34, on right: 18
assign_op (59)
    on left: 35 36 37, on right: 25
expr (60)
    on left: 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55
    56 57 58, on right: 25 27 28 29 31 43 44 45 46 47 48 49 50 51 52
    53 54 55 56 57 58 60 65 66 71
location (61)
    on left: 59 60, on right: 25 38
method_call (62)
    on left: 61 62, on right: 26 39
expr_list (63)
    on left: 63 64, on right: 61
nonempty_expr_list (64)
    on left: 65 66, on right: 64 66
callout_arg_list (65)
    on left: 67 68, on right: 62
nonempty_callout_arg_list (66)
    on left: 69 70, on right: 68 70
callout_arg (67)
    on left: 71 72, on right: 69 70


State 0

    0 $accept: . program $end

    CLASS  shift, and go to state 1

    program  go to state 2


State 1

    1 program: CLASS . ID OPEN_BRACE body CLOSE_BRACE

    ID  shift, and go to state 3


State 2

    0 $accept: program . $end

    $end  shift, and go to state 4


State 3

    1 program: CLASS ID . OPEN_BRACE body CLOSE_BRACE

    OPEN_BRACE  shift, and go to state 5


State 4

    0 $accept: program $end .

    $default  accept


State 5

    1 program: CLASS ID OPEN_BRACE . body CLOSE_BRACE

    INT_TYPE      shift, and go to state 6
    BOOLEAN_TYPE  shift, and go to state 7
    VOID_TYPE     shift, and go to state 8

    $default  reduce using rule 4 (method_decl_list)

    body              go to state 9
    method_decl_list  go to state 10
    method_decl       go to state 11
    value_type        go to state 12


State 6

   23 value_type: INT_TYPE .

    $default  reduce using rule 23 (value_type)


State 7

   24 value_type: BOOLEAN_TYPE .

    $default  reduce using rule 24 (value_type)


State 8

   10 method_decl: VOID_TYPE . ID OPEN_PAREN formal_parameter_list CLOSE_PAREN block

    ID  shift, and go to state 13


State 9

    1 program: CLASS ID OPEN_BRACE body . CLOSE_BRACE

    CLOSE_BRACE  shift, and go to state 14


State 10

    2 body: method_decl_list .

    $default  reduce using rule 2 (body)


State 11

    5 method_decl_list: method_decl . method_decl_list

    INT_TYPE      shift, and go to state 6
    BOOLEAN_TYPE  shift, and go to state 7
    VOID_TYPE     shift, and go to state 8

    $default  reduce using rule 4 (method_decl_list)

    method_decl_list  go to state 15
    method_decl       go to state 11
    value_type        go to state 16


State 12

    3 body: value_type . nonempty_field_list body
   11 method_decl: value_type . ID OPEN_PAREN formal_parameter_list CLOSE_PAREN block

    ID  shift, and go to state 17

    field                go to state 18
    nonempty_field_list  go to state 19


State 13

   10 method_decl: VOID_TYPE ID . OPEN_PAREN formal_parameter_list CLOSE_PAREN block

    OPEN_PAREN  shift, and go to state 20


State 14

    1 program: CLASS ID OPEN_BRACE body CLOSE_BRACE .

    $default  reduce using rule 1 (program)


State 15

    5 method_decl_list: method_decl method_decl_list .

    $default  reduce using rule 5 (method_decl_list)


State 16

   11 method_decl: value_type . ID OPEN_PAREN formal_parameter_list CLOSE_PAREN block

    ID  shift, and go to state 21


State 17

    6 field: ID .
    7      | ID . OPEN_BRACKET INT_LITERAL CLOSE_BRACKET
   11 method_decl: value_type ID . OPEN_PAREN formal_parameter_list CLOSE_PAREN block

    OPEN_PAREN    shift, and go to state 22
    OPEN_BRACKET  shift, and go to state 23

    $default  reduce using rule 6 (field)


State 18

    8 nonempty_field_list: field . SEMICOLON
    9                    | field . COMMA nonempty_field_list

    COMMA      shift, and go to state 24
    SEMICOLON  shift, and go to state 25


State 19

    3 body: value_type nonempty_field_list . body

    INT_TYPE      shift, and go to state 6
    BOOLEAN_TYPE  shift, and go to state 7
    VOID_TYPE     shift, and go to state 8

    $default  reduce using rule 4 (method_decl_list)

    body              go to state 26
    method_decl_list  go to state 10
    method_decl       go to state 11
    value_type        go to state 12


State 20

   10 method_decl: VOID_TYPE ID OPEN_PAREN . formal_parameter_list CLOSE_PAREN block

    INT_TYPE      shift, and go to state 6
    BOOLEAN_TYPE  shift, and go to state 7

    $default  reduce using rule 12 (formal_parameter_list)

    formal_parameter_list           go to state 27
    nonempty_formal_parameter_list  go to state 28
    value_type                      go to state 29


State 21

   11 method_decl: value_type ID . OPEN_PAREN formal_parameter_list CLOSE_PAREN block

    OPEN_PAREN  shift, and go to state 22


State 22

   11 method_decl: value_type ID OPEN_PAREN . formal_parameter_list CLOSE_PAREN block

    INT_TYPE      shift, and go to state 6
    BOOLEAN_TYPE  shift, and go to state 7

    $default  reduce using rule 12 (formal_parameter_list)

    formal_parameter_list           go to state 30
    nonempty_formal_parameter_list  go to state 28
    value_type                      go to state 29


State 23

    7 field: ID OPEN_BRACKET . INT_LITERAL CLOSE_BRACKET

    INT_LITERAL  shift, and go to state 31


State 24

    9 nonempty_field_list: field COMMA . nonempty_field_list

    ID  shift, and go to state 32

    field                go to state 18
    nonempty_field_list  go to state 33


State 25

    8 nonempty_field_list: field SEMICOLON .

    $default  reduce using rule 8 (nonempty_field_list)


State 26

    3 body: value_type nonempty_field_list body .

    $default  reduce using rule 3 (body)


State 27

   10 method_decl: VOID_TYPE ID OPEN_PAREN formal_parameter_list . CLOSE_PAREN block

    CLOSE_PAREN  shift, and go to state 34


State 28

   13 formal_parameter_list: nonempty_formal_parameter_list .

    $default  reduce using rule 13 (formal_parameter_list)


State 29

   14 nonempty_formal_parameter_list: value_type . ID
   15                               | value_type . ID COMMA nonempty_formal_parameter_list

    ID  shift, and go to state 35


State 30

   11 method_decl: value_type ID OPEN_PAREN formal_parameter_list . CLOSE_PAREN block

    CLOSE_PAREN  shift, and go to state 36


State 31

    7 field: ID OPEN_BRACKET INT_LITERAL . CLOSE_BRACKET

    CLOSE_BRACKET  shift, and go to state 37


State 32

    6 field: ID .
    7      | ID . OPEN_BRACKET INT_LITERAL CLOSE_BRACKET

    OPEN_BRACKET  shift, and go to state 23

    $default  reduce using rule 6 (field)


State 33

    9 nonempty_field_list: field COMMA nonempty_field_list .

    $default  reduce using rule 9 (nonempty_field_list)


State 34

   10 method_decl: VOID_TYPE ID OPEN_PAREN formal_parameter_list CLOSE_PAREN . block

    OPEN_BRACE  shift, and go to state 38

    block  go to state 39


State 35

   14 nonempty_formal_parameter_list: value_type ID .
   15                               | value_type ID . COMMA nonempty_formal_parameter_list

    COMMA  shift, and go to state 40

    $default  reduce using rule 14 (nonempty_formal_parameter_list)


State 36

   11 method_decl: value_type ID OPEN_PAREN formal_parameter_list CLOSE_PAREN . block

    OPEN_BRACE  shift, and go to state 38

    block  go to state 41


State 37

    7 field: ID OPEN_BRACKET INT_LITERAL CLOSE_BRACKET .

    $default  reduce using rule 7 (field)


State 38

   16 block: OPEN_BRACE . var_decl_list statement_list CLOSE_BRACE

    $default  reduce using rule 19 (var_decl_list)

    var_decl_list  go to state 42


State 39

   10 method_decl: VOID_TYPE ID OPEN_PAREN formal_parameter_list CLOSE_PAREN block .

    $default  reduce using rule 10 (method_decl)


State 40

   15 nonempty_formal_parameter_list: value_type ID COMMA . nonempty_formal_parameter_list

    INT_TYPE      shift, and go to state 6
    BOOLEAN_TYPE  shift, and go to state 7

    nonempty_formal_parameter_list  go to state 43
    value_type                      go to state 29


State 41

   11 method_decl: value_type ID OPEN_PAREN formal_parameter_list CLOSE_PAREN block .

    $default  reduce using rule 11 (method_decl)


State 42

   16 block: OPEN_BRACE var_decl_list . statement_list CLOSE_BRACE
   20 var_decl_list: var_decl_list . value_type nonempty_id_list SEMICOLON

    ID            shift, and go to state 44
    CALLOUT       shift, and go to state 45
    OPEN_BRACE    shift, and go to state 38
    IF            shift, and go to state 46
    FOR           shift, and go to state 47
    RETURN        shift, and go to state 48
    BREAK         shift, and go to state 49
    CONTINUE      shift, and go to state 50
    INT_TYPE      shift, and go to state 6
    BOOLEAN_TYPE  shift, and go to state 7

    $default  reduce using rule 17 (statement_list)

    block           go to state 51
    statement_list  go to state 52
    value_type      go to state 53
    statement       go to state 54
    location        go to state 55
    method_call     go to state 56


State 43

   15 nonempty_formal_parameter_list: value_type ID COMMA nonempty_formal_parameter_list .

    $default  reduce using rule 15 (nonempty_formal_parameter_list)


State 44

   59 location: ID .
   60         | ID . OPEN_BRACKET expr CLOSE_BRACKET
   61 method_call: ID . OPEN_PAREN expr_list CLOSE_PAREN

    OPEN_PAREN    shift, and go to state 57
    OPEN_BRACKET  shift, and go to state 58

    $default  reduce using rule 59 (location)


State 45

   62 method_call: CALLOUT . OPEN_PAREN STRING_LITERAL callout_arg_list CLOSE_PAREN

    OPEN_PAREN  shift, and go to state 59


State 46

   27 statement: IF . OPEN_PAREN expr CLOSE_PAREN block
   28          | IF . OPEN_PAREN expr CLOSE_PAREN block ELSE block

    OPEN_PAREN  shift, and go to state 60


State 47

   29 statement: FOR . ID ASSIGN expr COMMA expr block

    ID  shift, and go to state 61


State 48

   30 statement: RETURN . SEMICOLON
   31          | RETURN . expr SEMICOLON

    ID            shift, and go to state 44
    INT_LITERAL   shift, and go to state 62
    BOOL_LITERAL  shift, and go to state 63
    CHAR_LITERAL  shift, and go to state 64
    CALLOUT       shift, and go to state 45
    SEMICOLON     shift, and go to state 65
    OPEN_PAREN    shift, and go to state 66
    MINUS         shift, and go to state 67
    NOT           shift, and go to state 68

    expr         go to state 69
    location     go to state 70
    method_call  go to state 71


State 49

   32 statement: BREAK . SEMICOLON

    SEMICOLON  shift, and go to state 72


State 50

   33 statement: CONTINUE . SEMICOLON

    SEMICOLON  shift, and go to state 73


State 51

   34 statement: block .

    $default  reduce using rule 34 (statement)


State 52

   16 block: OPEN_BRACE var_decl_list statement_list . CLOSE_BRACE

    CLOSE_BRACE  shift, and go to state 74


State 53

   20 var_decl_list: var_decl_list value_type . nonempty_id_list SEMICOLON

    ID  shift, and go to state 75

    nonempty_id_list  go to state 76


State 54

   18 statement_list: statement . statement_list

    ID          shift, and go to state 44
    CALLOUT     shift, and go to state 45
    OPEN_BRACE  shift, and go to state 38
    IF          shift, and go to state 46
    FOR         shift, and go to state 47
    RETURN      shift, and go to state 48
    BREAK       shift, and go to state 49
    CONTINUE    shift, and go to state 50

    $default  reduce using rule 17 (statement_list)

    block           go to state 51
    statement_list  go to state 77
    statement       go to state 54
    location        go to state 55
    method_call     go to state 56


State 55

   25 statement: location . assign_op expr SEMICOLON

    ASSIGN        shift, and go to state 78
    PLUS_ASSIGN   shift, and go to state 79
    MINUS_ASSIGN  shift, and go to state 80

    assign_op  go to state 81


State 56

   26 statement: method_call . SEMICOLON

    SEMICOLON  shift, and go to state 82


State 57

   61 method_call: ID OPEN_PAREN . expr_list CLOSE_PAREN

    ID            shift, and go to state 44
    INT_LITERAL   shift, and go to state 62
    BOOL_LITERAL  shift, and go to state 63
    CHAR_LITERAL  shift, and go to state 64
    CALLOUT       shift, and go to state 45
    OPEN_PAREN    shift, and go to state 66
    MINUS         shift, and go to state 67
    NOT           shift, and go to state 68

    $default  reduce using rule 63 (expr_list)

    expr                go to state 83
    location            go to state 70
    method_call         go to state 71
    expr_list           go to state 84
    nonempty_expr_list  go to state 85


State 58

   60 location: ID OPEN_BRACKET . expr CLOSE_BRACKET

    ID            shift, and go to state 44
    INT_LITERAL   shift, and go to state 62
    BOOL_LITERAL  shift, and go to state 63
    CHAR_LITERAL  shift, and go to state 64
    CALLOUT       shift, and go to state 45
    OPEN_PAREN    shift, and go to state 66
    MINUS         shift, and go to state 67
    NOT           shift, and go to state 68

    expr         go to state 86
    location     go to state 70
    method_call  go to state 71


State 59

   62 method_call: CALLOUT OPEN_PAREN . STRING_LITERAL callout_arg_list CLOSE_PAREN

    STRING_LITERAL  shift, and go to state 87


State 60

   27 statement: IF OPEN_PAREN . expr CLOSE_PAREN block
   28          | IF OPEN_PAREN . expr CLOSE_PAREN block ELSE block

    ID            shift, and go to state 44
    INT_LITERAL   shift, and go to state 62
    BOOL_LITERAL  shift, and go to state 63
    CHAR_LITERAL  shift, and go to state 64
    CALLOUT       shift, and go to state 45
    OPEN_PAREN    shift, and go to state 66
    MINUS         shift, and go to state 67
    NOT           shift, and go to state 68

    expr         go to state 88
    location     go to state 70
    method_call  go to state 71


State 61

   29 statement: FOR ID . ASSIGN expr COMMA expr block

    ASSIGN  shift, and go to state 89


State 62

   40 expr: INT_LITERAL .

    $default  reduce using rule 40 (expr)


State 63

   42 expr: BOOL_LITERAL .

    $default  reduce using rule 42 (expr)


State 64

   41 expr: CHAR_LITERAL .

    $default  reduce using rule 41 (expr)


State 65

   30 statement: RETURN SEMICOLON .

    $default  reduce using rule 30 (statement)


State 66

   58 expr: OPEN_PAREN . expr CLOSE_PAREN

    ID            shift, and go to state 44
    INT_LITERAL   shift, and go to state 62
    BOOL_LITERAL  shift, and go to state 63
    CHAR_LITERAL  shift, and go to state 64
    CALLOUT       shift, and go to state 45
    OPEN_PAREN    shift, and go to state 66
    MINUS         shift, and go to state 67
    NOT           shift, and go to state 68

    expr         go to state 90
    location     go to state 70
    method_call  go to state 71


State 67

   57 expr: MINUS . expr

    ID            shift, and go to state 44
    INT_LITERAL   shift, and go to state 62
    BOOL_LITERAL  shift, and go to state 63
    CHAR_LITERAL  shift, and go to state 64
    CALLOUT       shift, and go to state 45
    OPEN_PAREN    shift, and go to state 66
    MINUS         shift, and go to state 67
    NOT           shift, and go to state 68

    expr         go to state 91
    location     go to state 70
    method_call  go to state 71


State 68

   56 expr: NOT . expr

    ID            shift, and go to state 44
    INT_LITERAL   shift, and go to state 62
    BOOL_LITERAL  shift, and go to state 63
    CHAR_LITERAL  shift, and go to state 64
    CALLOUT       shift, and go to state 45
    OPEN_PAREN    shift, and go to state 66
    MINUS         shift, and go to state 67
    NOT           shift, and go to state 68

    expr         go to state 92
    location     go to state 70
    method_call  go to state 71


State 69

   31 statement: RETURN expr . SEMICOLON
   43 expr: expr . OR expr
   44     | expr . AND expr
   45     | expr . EQ expr
   46     | expr . NE expr
   47     | expr . LT expr
   48     | expr . LE expr
   49     | expr . GE expr
   50     | expr . GT expr
   51     | expr . PLUS expr
   52     | expr . MINUS expr
   53     | expr . MULT expr
   54     | expr . DIV expr
   55     | expr . MOD expr

    SEMICOLON  shift, and go to state 93
    OR         shift, and go to state 94
    AND        shift, and go to state 95
    EQ         shift, and go to state 96
    NE         shift, and go to state 97
    LT         shift, and go to state 98
    LE         shift, and go to state 99
    GE         shift, and go to state 100
    GT         shift, and go to state 101
    PLUS       shift, and go to state 102
    MINUS      shift, and go to state 103
    MULT       shift, and go to state 104
    DIV        shift, and go to state 105
    MOD        shift, and go to state 106


State 70

   38 expr: location .

    $default  reduce using rule 38 (expr)


State 71

   39 expr: method_call .

    $default  reduce using rule 39 (expr)


State 72

   32 statement: BREAK SEMICOLON .

    $default  reduce using rule 32 (statement)


State 73

   33 statement: CONTINUE SEMICOLON .

    $default  reduce using rule 33 (statement)


State 74

   16 block: OPEN_BRACE var_decl_list statement_list CLOSE_BRACE .

    $default  reduce using rule 16 (block)


State 75

   21 nonempty_id_list: ID .
   22                 | ID . COMMA nonempty_id_list

    COMMA  shift, and go to state 107

    $default  reduce using rule 21 (nonempty_id_list)


State 76

   20 var_decl_list: var_decl_list value_type nonempty_id_list . SEMICOLON

    SEMICOLON  shift, and go to state 108


State 77

   18 statement_list: statement statement_list .

    $default  reduce using rule 18 (statement_list)


State 78

   35 assign_op: ASSIGN .

    $default  reduce using rule 35 (assign_op)


State 79

   36 assign_op: PLUS_ASSIGN .

    $default  reduce using rule 36 (assign_op)


State 80

   37 assign_op: MINUS_ASSIGN .

    $default  reduce using rule 37 (assign_op)


State 81

   25 statement: location assign_op . expr SEMICOLON

    ID            shift, and go to state 44
    INT_LITERAL   shift, and go to state 62
    BOOL_LITERAL  shift, and go to state 63
    CHAR_LITERAL  shift, and go to state 64
    CALLOUT       shift, and go to state 45
    OPEN_PAREN    shift, and go to state 66
    MINUS         shift, and go to state 67
    NOT           shift, and go to state 68

    expr         go to state 109
    location     go to state 70
    method_call  go to state 71


State 82

   26 statement: method_call SEMICOLON .

    $default  reduce using rule 26 (statement)


State 83

   43 expr: expr . OR expr
   44     | expr . AND expr
   45     | expr . EQ expr
   46     | expr . NE expr
   47     | expr . LT expr
   48     | expr . LE expr
   49     | expr . GE expr
   50     | expr . GT expr
   51     | expr . PLUS expr
   52     | expr . MINUS expr
   53     | expr . MULT expr
   54     | expr . DIV expr
   55     | expr . MOD expr
   65 nonempty_expr_list: expr .
   66                   | expr . COMMA nonempty_expr_list

    COMMA  shift, and go to state 110
    OR     shift, and go to state 94
    AND    shift, and go to state 95
    EQ     shift, and go to state 96
    NE     shift, and go to state 97
    LT     shift, and go to state 98
    LE     shift, and go to state 99
    GE     shift, and go to state 100
    GT     shift, and go to state 101
    PLUS   shift, and go to state 102
    MINUS  shift, and go to state 103
    MULT   shift, and go to state 104
    DIV    shift, and go to state 105
    MOD    shift, and go to state 106

    $default  reduce using rule 65 (nonempty_expr_list)


State 84

   61 method_call: ID OPEN_PAREN expr_list . CLOSE_PAREN

    CLOSE_PAREN  shift, and go to state 111


State 85

   64 expr_list: nonempty_expr_list .

    $default  reduce using rule 64 (expr_list)


State 86

   43 expr: expr . OR expr
   44     | expr . AND expr
   45     | expr . EQ expr
   46     | expr . NE expr
   47     | expr . LT expr
   48     | expr . LE expr
   49     | expr . GE expr
   50     | expr . GT expr
   51     | expr . PLUS expr
   52     | expr . MINUS expr
   53     | expr . MULT expr
   54     | expr . DIV expr
   55     | expr . MOD expr
   60 location: ID OPEN_BRACKET expr . CLOSE_BRACKET

    CLOSE_BRACKET  shift, and go to state 112
    OR             shift, and go to state 94
    AND            shift, and go to state 95
    EQ             shift, and go to state 96
    NE             shift, and go to state 97
    LT             shift, and go to state 98
    LE             shift, and go to state 99
    GE             shift, and go to state 100
    GT             shift, and go to state 101
    PLUS           shift, and go to state 102
    MINUS          shift, and go to state 103
    MULT           shift, and go to state 104
    DIV            shift, and go to state 105
    MOD            shift, and go to state 106


State 87

   62 method_call: CALLOUT OPEN_PAREN STRING_LITERAL . callout_arg_list CLOSE_PAREN

    COMMA  shift, and go to state 113

    $default  reduce using rule 67 (callout_arg_list)

    callout_arg_list  go to state 114


State 88

   27 statement: IF OPEN_PAREN expr . CLOSE_PAREN block
   28          | IF OPEN_PAREN expr . CLOSE_PAREN block ELSE block
   43 expr: expr . OR expr
   44     | expr . AND expr
   45     | expr . EQ expr
   46     | expr . NE expr
   47     | expr . LT expr
   48     | expr . LE expr
   49     | expr . GE expr
   50     | expr . GT expr
   51     | expr . PLUS expr
   52     | expr . MINUS expr
   53     | expr . MULT expr
   54     | expr . DIV expr
   55     | expr . MOD expr

    CLOSE_PAREN  shift, and go to state 115
    OR           shift, and go to state 94
    AND          shift, and go to state 95
    EQ           shift, and go to state 96
    NE           shift, and go to state 97
    LT           shift, and go to state 98
    LE           shift, and go to state 99
    GE           shift, and go to state 100
    GT           shift, and go to state 101
    PLUS         shift, and go to state 102
    MINUS        shift, and go to state 103
    MULT         shift, and go to state 104
    DIV          shift, and go to state 105
    MOD          shift, and go to state 106


State 89

   29 statement: FOR ID ASSIGN . expr COMMA expr block

    ID            shift, and go to state 44
    INT_LITERAL   shift, and go to state 62
    BOOL_LITERAL  shift, and go to state 63
    CHAR_LITERAL  shift, and go to state 64
    CALLOUT       shift, and go to state 45
    OPEN_PAREN    shift, and go to state 66
    MINUS         shift, and go to state 67
    NOT           shift, and go to state 68

    expr         go to state 116
    location     go to state 70
    method_call  go to state 71


State 90

   43 expr: expr . OR expr
   44     | expr . AND expr
   45     | expr . EQ expr
   46     | expr . NE expr
   47     | expr . LT expr
   48     | expr . LE expr
   49     | expr . GE expr
   50     | expr . GT expr
   51     | expr . PLUS expr
   52     | expr . MINUS expr
   53     | expr . MULT expr
   54     | expr . DIV expr
   55     | expr . MOD expr
   58     | OPEN_PAREN expr . CLOSE_PAREN

    CLOSE_PAREN  shift, and go to state 117
    OR           shift, and go to state 94
    AND          shift, and go to state 95
    EQ           shift, and go to state 96
    NE           shift, and go to state 97
    LT           shift, and go to state 98
    LE           shift, and go to state 99
    GE           shift, and go to state 100
    GT           shift, and go to state 101
    PLUS         shift, and go to state 102
    MINUS        shift, and go to state 103
    MULT         shift, and go to state 104
    DIV          shift, and go to state 105
    MOD          shift, and go to state 106


State 91

   43 expr: expr . OR expr
   44     | expr . AND expr
   45     | expr . EQ expr
   46     | expr . NE expr
   47     | expr . LT expr
   48     | expr . LE expr
   49     | expr . GE expr
   50     | expr . GT expr
   51     | expr . PLUS expr
   52     | expr . MINUS expr
   53     | expr . MULT expr
   54     | expr . DIV expr
   55     | expr . MOD expr
   57     | MINUS expr .

    MULT  shift, and go to state 104
    DIV   shift, and go to state 105
    MOD   shift, and go to state 106

    $default  reduce using rule 57 (expr)


State 92

   43 expr: expr . OR expr
   44     | expr . AND expr
   45     | expr . EQ expr
   46     | expr . NE expr
   47     | expr . LT expr
   48     | expr . LE expr
   49     | expr . GE expr
   50     | expr . GT expr
   51     | expr . PLUS expr
   52     | expr . MINUS expr
   53     | expr . MULT expr
   54     | expr . DIV expr
   55     | expr . MOD expr
   56     | NOT expr .

    $default  reduce using rule 56 (expr)


State 93

   31 statement: RETURN expr SEMICOLON .

    $default  reduce using rule 31 (statement)


State 94

   43 expr: expr OR . expr

    ID            shift, and go to state 44
    INT_LITERAL   shift, and go to state 62
    BOOL_LITERAL  shift, and go to state 63
    CHAR_LITERAL  shift, and go to state 64
    CALLOUT       shift, and go to state 45
    OPEN_PAREN    shift, and go to state 66
    MINUS         shift, and go to state 67
    NOT           shift, and go to state 68

    expr         go to state 118
    location     go to state 70
    method_call  go to state 71


State 95

   44 expr: expr AND . expr

    ID            shift, and go to state 44
    INT_LITERAL   shift, and go to state 62
    BOOL_LITERAL  shift, and go to state 63
    CHAR_LITERAL  shift, and go to state 64
    CALLOUT       shift, and go to state 45
    OPEN_PAREN    shift, and go to state 66
    MINUS         shift, and go to state 67
    NOT           shift, and go to state 68

    expr         go to state 119
    location     go to state 70
    method_call  go to state 71


State 96

   45 expr: expr EQ . expr

    ID            shift, and go to state 44
    INT_LITERAL   shift, and go to state 62
    BOOL_LITERAL  shift, and go to state 63
    CHAR_LITERAL  shift, and go to state 64
    CALLOUT       shift, and go to state 45
    OPEN_PAREN    shift, and go to state 66
    MINUS         shift, and go to state 67
    NOT           shift, and go to state 68

    expr         go to state 120
    location     go to state 70
    method_call  go to state 71


State 97

   46 expr: expr NE . expr

    ID            shift, and go to state 44
    INT_LITERAL   shift, and go to state 62
    BOOL_LITERAL  shift, and go to state 63
    CHAR_LITERAL  shift, and go to state 64
    CALLOUT       shift, and go to state 45
    OPEN_PAREN    shift, and go to state 66
    MINUS         shift, and go to state 67
    NOT           shift, and go to state 68

    expr         go to state 121
    location     go to state 70
    method_call  go to state 71


State 98

   47 expr: expr LT . expr

    ID            shift, and go to state 44
    INT_LITERAL   shift, and go to state 62
    BOOL_LITERAL  shift, and go to state 63
    CHAR_LITERAL  shift, and go to state 64
    CALLOUT       shift, and go to state 45
    OPEN_PAREN    shift, and go to state 66
    MINUS         shift, and go to state 67
    NOT           shift, and go to state 68

    expr         go to state 122
    location     go to state 70
    method_call  go to state 71


State 99

   48 expr: expr LE . expr

    ID            shift, and go to state 44
    INT_LITERAL   shift, and go to state 62
    BOOL_LITERAL  shift, and go to state 63
    CHAR_LITERAL  shift, and go to state 64
    CALLOUT       shift, and go to state 45
    OPEN_PAREN    shift, and go to state 66
    MINUS         shift, and go to state 67
    NOT           shift, and go to state 68

    expr         go to state 123
    location     go to state 70
    method_call  go to state 71


State 100

   49 expr: expr GE . expr

    ID            shift, and go to state 44
    INT_LITERAL   shift, and go to state 62
    BOOL_LITERAL  shift, and go to state 63
    CHAR_LITERAL  shift, and go to state 64
    CALLOUT       shift, and go to state 45
    OPEN_PAREN    shift, and go to state 66
    MINUS         shift, and go to state 67
    NOT           shift, and go to state 68

    expr         go to state 124
    location     go to state 70
    method_call  go to state 71


State 101

   50 expr: expr GT . expr

    ID            shift, and go to state 44
    INT_LITERAL   shift, and go to state 62
    BOOL_LITERAL  shift, and go to state 63
    CHAR_LITERAL  shift, and go to state 64
    CALLOUT       shift, and go to state 45
    OPEN_PAREN    shift, and go to state 66
    MINUS         shift, and go to state 67
    NOT           shift, and go to state 68

    expr         go to state 125
    location     go to state 70
    method_call  go to state 71


State 102

   51 expr: expr PLUS . expr

    ID            shift, and go to state 44
    INT_LITERAL   shift, and go to state 62
    BOOL_LITERAL  shift, and go to state 63
    CHAR_LITERAL  shift, and go to state 64
    CALLOUT       shift, and go to state 45
    OPEN_PAREN    shift, and go to state 66
    MINUS         shift, and go to state 67
    NOT           shift, and go to state 68

    expr         go to state 126
    location     go to state 70
    method_call  go to state 71


State 103

   52 expr: expr MINUS . expr

    ID            shift, and go to state 44
    INT_LITERAL   shift, and go to state 62
    BOOL_LITERAL  shift, and go to state 63
    CHAR_LITERAL  shift, and go to state 64
    CALLOUT       shift, and go to state 45
    OPEN_PAREN    shift, and go to state 66
    MINUS         shift, and go to state 67
    NOT           shift, and go to state 68

    expr         go to state 127
    location     go to state 70
    method_call  go to state 71


State 104

   53 expr: expr MULT . expr

    ID            shift, and go to state 44
    INT_LITERAL   shift, and go to state 62
    BOOL_LITERAL  shift, and go to state 63
    CHAR_LITERAL  shift, and go to state 64
    CALLOUT       shift, and go to state 45
    OPEN_PAREN    shift, and go to state 66
    MINUS         shift, and go to state 67
    NOT           shift, and go to state 68

    expr         go to state 128
    location     go to state 70
    method_call  go to state 71


State 105

   54 expr: expr DIV . expr

    ID            shift, and go to state 44
    INT_LITERAL   shift, and go to state 62
    BOOL_LITERAL  shift, and go to state 63
    CHAR_LITERAL  shift, and go to state 64
    CALLOUT       shift, and go to state 45
    OPEN_PAREN    shift, and go to state 66
    MINUS         shift, and go to state 67
    NOT           shift, and go to state 68

    expr         go to state 129
    location     go to state 70
    method_call  go to state 71


State 106

   55 expr: expr MOD . expr

    ID            shift, and go to state 44
    INT_LITERAL   shift, and go to state 62
    BOOL_LITERAL  shift, and go to state 63
    CHAR_LITERAL  shift, and go to state 64
    CALLOUT       shift, and go to state 45
    OPEN_PAREN    shift, and go to state 66
    MINUS         shift, and go to state 67
    NOT           shift, and go to state 68

    expr         go to state 130
    location     go to state 70
    method_call  go to state 71


State 107

   22 nonempty_id_list: ID COMMA . nonempty_id_list

    ID  shift, and go to state 75

    nonempty_id_list  go to state 131


State 108

   20 var_decl_list: var_decl_list value_type nonempty_id_list SEMICOLON .

    $default  reduce using rule 20 (var_decl_list)


State 109

   25 statement: location assign_op expr . SEMICOLON
   43 expr: expr . OR expr
   44     | expr . AND expr
   45     | expr . EQ expr
   46     | expr . NE expr
   47     | expr . LT expr
   48     | expr . LE expr
   49     | expr . GE expr
   50     | expr . GT expr
   51     | expr . PLUS expr
   52     | expr . MINUS expr
   53     | expr . MULT expr
   54     | expr . DIV expr
   55     | expr . MOD expr

    SEMICOLON  shift, and go to state 132
    OR         shift, and go to state 94
    AND        shift, and go to state 95
    EQ         shift, and go to state 96
    NE         shift, and go to state 97
    LT         shift, and go to state 98
    LE         shift, and go to state 99
    GE         shift, and go to state 100
    GT         shift, and go to state 101
    PLUS       shift, and go to state 102
    MINUS      shift, and go to state 103
    MULT       shift, and go to state 104
    DIV        shift, and go to state 105
    MOD        shift, and go to state 106


State 110

   66 nonempty_expr_list: expr COMMA . nonempty_expr_list

    ID            shift, and go to state 44
    INT_LITERAL   shift, and go to state 62
    BOOL_LITERAL  shift, and go to state 63
    CHAR_LITERAL  shift, and go to state 64
    CALLOUT       shift, and go to state 45
    OPEN_PAREN    shift, and go to state 66
    MINUS         shift, and go to state 67
    NOT           shift, and go to state 68

    expr                go to state 83
    location            go to state 70
    method_call         go to state 71
    nonempty_expr_list  go to state 133


State 111

   61 method_call: ID OPEN_PAREN expr_list CLOSE_PAREN .

    $default  reduce using rule 61 (method_call)


State 112

   60 location: ID OPEN_BRACKET expr CLOSE_BRACKET .

    $default  reduce using rule 60 (location)


State 113

   68 callout_arg_list: COMMA . nonempty_callout_arg_list

    ID              shift, and go to state 44
    INT_LITERAL     shift, and go to state 62
    STRING_LITERAL  shift, and go to state 134
    BOOL_LITERAL    shift, and go to state 63
    CHAR_LITERAL    shift, and go to state 64
    CALLOUT         shift, and go to state 45
    OPEN_PAREN      shift, and go to state 66
    MINUS           shift, and go to state 67
    NOT             shift, and go to state 68

    expr                       go to state 135
    location                   go to state 70
    method_call                go to state 71
    nonempty_callout_arg_list  go to state 136
    callout_arg                go to state 137


State 114

   62 method_call: CALLOUT OPEN_PAREN STRING_LITERAL callout_arg_list . CLOSE_PAREN

    CLOSE_PAREN  shift, and go to state 138


State 115

   27 statement: IF OPEN_PAREN expr CLOSE_PAREN . block
   28          | IF OPEN_PAREN expr CLOSE_PAREN . block ELSE block

    OPEN_BRACE  shift, and go to state 38

    block  go to state 139


State 116

   29 statement: FOR ID ASSIGN expr . COMMA expr block
   43 expr: expr . OR expr
   44     | expr . AND expr
   45     | expr . EQ expr
   46     | expr . NE expr
   47     | expr . LT expr
   48     | expr . LE expr
   49     | expr . GE expr
   50     | expr . GT expr
   51     | expr . PLUS expr
   52     | expr . MINUS expr
   53     | expr . MULT expr
   54     | expr . DIV expr
   55     | expr . MOD expr

    COMMA  shift, and go to state 140
    OR     shift, and go to state 94
    AND    shift, and go to state 95
    EQ     shift, and go to state 96
    NE     shift, and go to state 97
    LT     shift, and go to state 98
    LE     shift, and go to state 99
    GE     shift, and go to state 100
    GT     shift, and go to state 101
    PLUS   shift, and go to state 102
    MINUS  shift, and go to state 103
    MULT   shift, and go to state 104
    DIV    shift, and go to state 105
    MOD    shift, and go to state 106


State 117

   58 expr: OPEN_PAREN expr CLOSE_PAREN .

    $default  reduce using rule 58 (expr)


State 118

   43 expr: expr . OR expr
   43     | expr OR expr .
   44     | expr . AND expr
   45     | expr . EQ expr
   46     | expr . NE expr
   47     | expr . LT expr
   48     | expr . LE expr
   49     | expr . GE expr
   50     | expr . GT expr
   51     | expr . PLUS expr
   52     | expr . MINUS expr
   53     | expr . MULT expr
   54     | expr . DIV expr
   55     | expr . MOD expr

    AND    shift, and go to state 95
    EQ     shift, and go to state 96
    NE     shift, and go to state 97
    LT     shift, and go to state 98
    LE     shift, and go to state 99
    GE     shift, and go to state 100
    GT     shift, and go to state 101
    PLUS   shift, and go to state 102
    MINUS  shift, and go to state 103
    MULT   shift, and go to state 104
    DIV    shift, and go to state 105
    MOD    shift, and go to state 106

    $default  reduce using rule 43 (expr)


State 119

   43 expr: expr . OR expr
   44     | expr . AND expr
   44     | expr AND expr .
   45     | expr . EQ expr
   46     | expr . NE expr
   47     | expr . LT expr
   48     | expr . LE expr
   49     | expr . GE expr
   50     | expr . GT expr
   51     | expr . PLUS expr
   52     | expr . MINUS expr
   53     | expr . MULT expr
   54     | expr . DIV expr
   55     | expr . MOD expr

    EQ     shift, and go to state 96
    NE     shift, and go to state 97
    LT     shift, and go to state 98
    LE     shift, and go to state 99
    GE     shift, and go to state 100
    GT     shift, and go to state 101
    PLUS   shift, and go to state 102
    MINUS  shift, and go to state 103
    MULT   shift, and go to state 104
    DIV    shift, and go to state 105
    MOD    shift, and go to state 106

    $default  reduce using rule 44 (expr)


State 120

   43 expr: expr . OR expr
   44     | expr . AND expr
   45     | expr . EQ expr
   45     | expr EQ expr .
   46     | expr . NE expr
   47     | expr . LT expr
   48     | expr . LE expr
   49     | expr . GE expr
   50     | expr . GT expr
   51     | expr . PLUS expr
   52     | expr . MINUS expr
   53     | expr . MULT expr
   54     | expr . DIV expr
   55     | expr . MOD expr

    LT     shift, and go to state 98
    LE     shift, and go to state 99
    GE     shift, and go to state 100
    GT     shift, and go to state 101
    PLUS   shift, and go to state 102
    MINUS  shift, and go to state 103
    MULT   shift, and go to state 104
    DIV    shift, and go to state 105
    MOD    shift, and go to state 106

    $default  reduce using rule 45 (expr)


State 121

   43 expr: expr . OR expr
   44     | expr . AND expr
   45     | expr . EQ expr
   46     | expr . NE expr
   46     | expr NE expr .
   47     | expr . LT expr
   48     | expr . LE expr
   49     | expr . GE expr
   50     | expr . GT expr
   51     | expr . PLUS expr
   52     | expr . MINUS expr
   53     | expr . MULT expr
   54     | expr . DIV expr
   55     | expr . MOD expr

    LT     shift, and go to state 98
    LE     shift, and go to state 99
    GE     shift, and go to state 100
    GT     shift, and go to state 101
    PLUS   shift, and go to state 102
    MINUS  shift, and go to state 103
    MULT   shift, and go to state 104
    DIV    shift, and go to state 105
    MOD    shift, and go to state 106

    $default  reduce using rule 46 (expr)


State 122

   43 expr: expr . OR expr
   44     | expr . AND expr
   45     | expr . EQ expr
   46     | expr . NE expr
   47     | expr . LT expr
   47     | expr LT expr .
   48     | expr . LE expr
   49     | expr . GE expr
   50     | expr . GT expr
   51     | expr . PLUS expr
   52     | expr . MINUS expr
   53     | expr . MULT expr
   54     | expr . DIV expr
   55     | expr . MOD expr

    PLUS   shift, and go to state 102
    MINUS  shift, and go to state 103
    MULT   shift, and go to state 104
    DIV    shift, and go to state 105
    MOD    shift, and go to state 106

    $default  reduce using rule 47 (expr)


State 123

   43 expr: expr . OR expr
   44     | expr . AND expr
   45     | expr . EQ expr
   46     | expr . NE expr
   47     | expr . LT expr
   48     | expr . LE expr
   48     | expr LE expr .
   49     | expr . GE expr
   50     | expr . GT expr
   51     | expr . PLUS expr
   52     | expr . MINUS expr
   53     | expr . MULT expr
   54     | expr . DIV expr
   55     | expr . MOD expr

    PLUS   shift, and go to state 102
    MINUS  shift, and go to state 103
    MULT   shift, and go to state 104
    DIV    shift, and go to state 105
    MOD    shift, and go to state 106

    $default  reduce using rule 48 (expr)


State 124

   43 expr: expr . OR expr
   44     | expr . AND expr
   45     | expr . EQ expr
   46     | expr . NE expr
   47     | expr . LT expr
   48     | expr . LE expr
   49     | expr . GE expr
   49     | expr GE expr .
   50     | expr . GT expr
   51     | expr . PLUS expr
   52     | expr . MINUS expr
   53     | expr . MULT expr
   54     | expr . DIV expr
   55     | expr . MOD expr

    PLUS   shift, and go to state 102
    MINUS  shift, and go to state 103
    MULT   shift, and go to state 104
    DIV    shift, and go to state 105
    MOD    shift, and go to state 106

    $default  reduce using rule 49 (expr)


State 125

   43 expr: expr . OR expr
   44     | expr . AND expr
   45     | expr . EQ expr
   46     | expr . NE expr
   47     | expr . LT expr
   48     | expr . LE expr
   49     | expr . GE expr
   50     | expr . GT expr
   50     | expr GT expr .
   51     | expr . PLUS expr
   52     | expr . MINUS expr
   53     | expr . MULT expr
   54     | expr . DIV expr
   55     | expr . MOD expr

    PLUS   shift, and go to state 102
    MINUS  shift, and go to state 103
    MULT   shift, and go to state 104
    DIV    shift, and go to state 105
    MOD    shift, and go to state 106

    $default  reduce using rule 50 (expr)


State 126

   43 expr: expr . OR expr
   44     | expr . AND expr
   45     | expr . EQ expr
   46     | expr . NE expr
   47     | expr . LT expr
   48     | expr . LE expr
   49     | expr . GE expr
   50     | expr . GT expr
   51     | expr . PLUS expr
   51     | expr PLUS expr .
   52     | expr . MINUS expr
   53     | expr . MULT expr
   54     | expr . DIV expr
   55     | expr . MOD expr

    MULT  shift, and go to state 104
    DIV   shift, and go to state 105
    MOD   shift, and go to state 106

    $default  reduce using rule 51 (expr)


State 127

   43 expr: expr . OR expr
   44     | expr . AND expr
   45     | expr . EQ expr
   46     | expr . NE expr
   47     | expr . LT expr
   48     | expr . LE expr
   49     | expr . GE expr
   50     | expr . GT expr
   51     | expr . PLUS expr
   52     | expr . MINUS expr
   52     | expr MINUS expr .
   53     | expr . MULT expr
   54     | expr . DIV expr
   55     | expr . MOD expr

    MULT  shift, and go to state 104
    DIV   shift, and go to state 105
    MOD   shift, and go to state 106

    $default  reduce using rule 52 (expr)


State 128

   43 expr: expr . OR expr
   44     | expr . AND expr
   45     | expr . EQ expr
   46     | expr . NE expr
   47     | expr . LT expr
   48     | expr . LE expr
   49     | expr . GE expr
   50     | expr . GT expr
   51     | expr . PLUS expr
   52     | expr . MINUS expr
   53     | expr . MULT expr
   53     | expr MULT expr .
   54     | expr . DIV expr
   55     | expr . MOD expr

    $default  reduce using rule 53 (expr)


State 129

   43 expr: expr . OR expr
   44     | expr . AND expr
   45     | expr . EQ expr
   46     | expr . NE expr
   47     | expr . LT expr
   48     | expr . LE expr
   49     | expr . GE expr
   50     | expr . GT expr
   51     | expr . PLUS expr
   52     | expr . MINUS expr
   53     | expr . MULT expr
   54     | expr . DIV expr
   54     | expr DIV expr .
   55     | expr . MOD expr

    $default  reduce using rule 54 (expr)


State 130

   43 expr: expr . OR expr
   44     | expr . AND expr
   45     | expr . EQ expr
   46     | expr . NE expr
   47     | expr . LT expr
   48     | expr . LE expr
   49     | expr . GE expr
   50     | expr . GT expr
   51     | expr . PLUS expr
   52     | expr . MINUS expr
   53     | expr . MULT expr
   54     | expr . DIV expr
   55     | expr . MOD expr
   55     | expr MOD expr .

    $default  reduce using rule 55 (expr)


State 131

   22 nonempty_id_list: ID COMMA nonempty_id_list .

    $default  reduce using rule 22 (nonempty_id_list)


State 132

   25 statement: location assign_op expr SEMICOLON .

    $default  reduce using rule 25 (statement)


State 133

   66 nonempty_expr_list: expr COMMA nonempty_expr_list .

    $default  reduce using rule 66 (nonempty_expr_list)


State 134

   72 callout_arg: STRING_LITERAL .

    $default  reduce using rule 72 (callout_arg)


State 135

   43 expr: expr . OR expr
   44     | expr . AND expr
   45     | expr . EQ expr
   46     | expr . NE expr
   47     | expr . LT expr
   48     | expr . LE expr
   49     | expr . GE expr
   50     | expr . GT expr
   51     | expr . PLUS expr
   52     | expr . MINUS expr
   53     | expr . MULT expr
   54     | expr . DIV expr
   55     | expr . MOD expr
   71 callout_arg: expr .

    OR     shift, and go to state 94
    AND    shift, and go to state 95
    EQ     shift, and go to state 96
    NE     shift, and go to state 97
    LT     shift, and go to state 98
    LE     shift, and go to state 99
    GE     shift, and go to state 100
    GT     shift, and go to state 101
    PLUS   shift, and go to state 102
    MINUS  shift, and go to state 103
    MULT   shift, and go to state 104
    DIV    shift, and go to state 105
    MOD    shift, and go to state 106

    $default  reduce using rule 71 (callout_arg)


State 136

   68 callout_arg_list: COMMA nonempty_callout_arg_list .

    $default  reduce using rule 68 (callout_arg_list)


State 137

   69 nonempty_callout_arg_list: callout_arg .
   70                          | callout_arg . COMMA nonempty_callout_arg_list

    COMMA  shift, and go to state 141

    $default  reduce using rule 69 (nonempty_callout_arg_list)


State 138

   62 method_call: CALLOUT OPEN_PAREN STRING_LITERAL callout_arg_list CLOSE_PAREN .

    $default  reduce using rule 62 (method_call)


State 139

   27 statement: IF OPEN_PAREN expr CLOSE_PAREN block .
   28          | IF OPEN_PAREN expr CLOSE_PAREN block . ELSE block

    ELSE  shift, and go to state 142

    $default  reduce using rule 27 (statement)


State 140

   29 statement: FOR ID ASSIGN expr COMMA . expr block

    ID            shift, and go to state 44
    INT_LITERAL   shift, and go to state 62
    BOOL_LITERAL  shift, and go to state 63
    CHAR_LITERAL  shift, and go to state 64
    CALLOUT       shift, and go to state 45
    OPEN_PAREN    shift, and go to state 66
    MINUS         shift, and go to state 67
    NOT           shift, and go to state 68

    expr         go to state 143
    location     go to state 70
    method_call  go to state 71


State 141

   70 nonempty_callout_arg_list: callout_arg COMMA . nonempty_callout_arg_list

    ID              shift, and go to state 44
    INT_LITERAL     shift, and go to state 62
    STRING_LITERAL  shift, and go to state 134
    BOOL_LITERAL    shift, and go to state 63
    CHAR_LITERAL    shift, and go to state 64
    CALLOUT         shift, and go to state 45
    OPEN_PAREN      shift, and go to state 66
    MINUS           shift, and go to state 67
    NOT             shift, and go to state 68

    expr                       go to state 135
    location                   go to state 70
    method_call                go to state 71
    nonempty_callout_arg_list  go to state 144
    callout_arg                go to state 137


State 142

   28 statement: IF OPEN_PAREN expr CLOSE_PAREN block ELSE . block

    OPEN_BRACE  shift, and go to state 38

    block  go to state 145


State 143

   29 statement: FOR ID ASSIGN expr COMMA expr . block
   43 expr: expr . OR expr
   44     | expr . AND expr
   45     | expr . EQ expr
   46     | expr . NE expr
   47     | expr . LT expr
   48     | expr . LE expr
   49     | expr . GE expr
   50     | expr . GT expr
   51     | expr . PLUS expr
   52     | expr . MINUS expr
   53     | expr . MULT expr
   54     | expr . DIV expr
   55     | expr . MOD expr

    OPEN_BRACE  shift, and go to state 38
    OR          shift, and go to state 94
    AND         shift, and go to state 95
    EQ          shift, and go to state 96
    NE          shift, and go to state 97
    LT          shift, and go to state 98
    LE          shift, and go to state 99
    GE          shift, and go to state 100
    GT          shift, and go to state 101
    PLUS        shift, and go to state 102
    MINUS       shift, and go to state 103
    MULT        shift, and go to state 104
    DIV         shift, and go to state 105
    MOD         shift, and go to state 106

    block  go to state 146


State 144

   70 nonempty_callout_arg_list: callout_arg COMMA nonempty_callout_arg_list .

    $default  reduce using rule 70 (nonempty_callout_arg_list)


State 145

   28 statement: IF OPEN_PAREN expr CLOSE_PAREN block ELSE block .

    $default  reduce using rule 28 (statement)


State 146

   29 statement: FOR ID ASSIGN expr COMMA expr block .

    $default  reduce using rule 29 (statement)
